version: "2.1"

services:

  traefik:
    image: traefik
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf/traefik.toml:/etc/traefik/traefik.toml
    ports:
      - 80:80
    restart: always

  adminer:
    image: adminer
    container_name: adminer
    labels:
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:adminer.vcap.me"
      - "traefik.basic.port=8080"
    restart: always

  postgresql:
    image: postgres:11
    container_name: postgresql
    hostname: postgresql
    volumes: 
      - ./sql/create-driver.sql:/docker-entrypoint-initdb.d/create-driver.sql
    environment:
      POSTGRES_DB: orderproc
      POSTGRES_PASSWORD: orderproc
      POSTGRES_USER: orderproc
    ports:
      - 5432:5432
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    hostname: minio
    volumes:
      - './container-volume/minio/data/:/data'
#      - './minio/config:/root/.minio'
    labels:
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:minio.vcap.me"
      - "traefik.basic.port=9000"
    environment:
      MINIO_ACCESS_KEY: V42FCGRVMK24JJ8DHUYG
      MINIO_SECRET_KEY: bKhWxVF3kQoLY9kFmt91l+tDrEoZjqnWXzY9Eza
    command: server /data
    restart: always

  awscli:
    image: xueshanf/awscli
    container_name: awscli
    hostname: awscli
    volumes:
      - './conf/s3cfg:/root/.s3cfg'
      - './data-transfer:/tmp/data-transfer'
#      - './minio/config:/root/.minio'
    environment:
      AWS_ACCESS_KEY_ID: V42FCGRVMK24JJ8DHUYG
      AWS_SECRET_ACCESS_KEY: bKhWxVF3kQoLY9kFmt91l+tDrEoZjqnWXzY9Eza
    command: tail -f /dev/null
    restart: always
  
  ftp:
    image: stilliard/pure-ftpd
    container_name: ftp
    hostname: ftp
    environment:
#      - PUBLICHOST="192.168.73.86"
      - PUBLICHOST=ftp
      - FTP_USER_NAME=orderproc
      - FTP_USER_PASS=orderproc
      - FTP_USER_HOME=/home/ftp-data
      - FTP_MAX_CLIENTS=9
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    restart: always

  filezilla:
    image: jlesage/filezilla
    container_name: filezilla
    volumes: 
      - ./data-transfer:/data-transfer
    ports:
      - "5800:5800"
      - "5900:5900"
    labels:
      - "traefik.enable=true"
      - "traefik.basic.frontend.rule=Host:filezilla.vcap.me"
      - "traefik.basic.port=5800"
#    volumes:
#      - "/docker/appdata/filezilla:/config:rw"
#      - "/files:/storage:rw"
    environment:
      - VNC_PASSWORD=admin123  
    
  zeppelin:
    image: trivadis/apache-zeppelin:0.8.1-hadoop-3.1.1-spark-2.4.3
    container_name: zeppelin
    hostname: zeppelin
    ports:
      - "38081:8080"    
      - "4040:4040"
      - "42331:42331"    
    environment:
      SPARK_MASTER: "spark://spark-master:7077"
      # set spark-master for Zeppelin interpreter
      MASTER: "spark://spark-master:7077"
      SPARK_DRIVER_HOST: zeppelin
      SPARK_DRIVER_BINDADDRESS: "0.0.0.0"
      PYSPARK_PYTHON: "python3"
      SPARK_SUBMIT_OPTIONS: "--packages org.apache.commons:commons-lang3:3.5"
    volumes:
      - './conf/s3cfg:/root/.s3cfg'
    restart: always

  # make sure to get Spark to fit with the version of spark master 
  # - 2.4.0 tag 59b402ce701d
  # - 2.4.3 tag abdb27a6dfbb
  jupyter:
    image: jupyter/all-spark-notebook:abdb27a6dfbb
    container_name: jupyter
    hostname: jupyter
    ports: 
      - "38888:8888"
    environment:
      JUPYTER_ENABLE_LAB: "true"
      JUPYTER_TOKEN: "abc123"
      GRANT_SUDO: "true"
      TINI_SUBREAPER: "true"
    restart: always

